plugins {
    id "java-gradle-plugin"
    id "com.gradle.plugin-publish" version "1.2.1"
    id "signing"
    id "checkstyle"
}

base {
    java.toolchain.languageVersion = JavaLanguageVersion.of(8)
    compileJava.options.encoding = compileTestJava.options.encoding = javadoc.options.encoding = "UTF-8"

    archivesName = project.maven_name ?: rootProject.maven_name
    group = project.maven_group ?: rootProject.maven_group
    version = project.maven_version ?: rootProject.maven_version
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly gradleApi()

    implementation "net.lenni0451.classtransform:core:1.13.0"
}

java {
    withSourcesJar()
    withJavadocJar()
}

gradlePlugin {
    website = rootProject.website_url
    vcsUrl = rootProject.website_url
    plugins {
        methodinliner {
            id = "net.lenni0451.method-inliner"
            implementationClass = "net.lenni0451.methodinliner.MethodInlinerPlugin"
            displayName = project.maven_name ?: rootProject.maven_name
            description = rootProject.plugin_description
        }
    }
}

publishing {
    repositories {
        maven {
            name = "reposilite"
            if (rootProject.test_publish.equals("true")) {
                url = "https://maven.lenni0451.net/test"
            } else {
                def releasesUrl = "https://maven.lenni0451.net/releases"
                def snapshotsUrl = "https://maven.lenni0451.net/snapshots"
                url = project.maven_version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl
            }

            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        pluginMaven(MavenPublication) {
            pom {
                name = rootProject.name
                description = rootProject.plugin_description
                url = rootProject.website_url
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/Lenni0451/GradleMethodInliner/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "Lenni0451"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/Lenni0451/GradleMethodInliner.git"
                    developerConnection = "scm:git:ssh://github.com/Lenni0451/GradleMethodInliner.git"
                    url = "github.com/Lenni0451/GradleMethodInliner"
                }
            }
        }
    }
}

checkstyle {
    toolVersion = "9.3" //Latest version for Java 8
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
}

signing {
    setRequired false
    sign configurations.archives
    sign publishing.publications.pluginMaven
}

project.tasks.withType(PublishToMavenRepository).forEach {
    it.dependsOn(project.tasks.withType(Sign))
}
build.dependsOn(check)
